/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Modelo.Poligono;
import Modelo.Ponto;
import Problemas.Problemas_Classicos;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Vitor
 */
public class Interface_Ponto_In_Poligono extends javax.swing.JFrame {

    /**
     * Creates new form Interface_Ponto_In_Poligono
     */
    public static ArrayList<Ponto> lista_Ponto;
    public static Ponto p;
    public static int state;
    private Problemas_Classicos classicos = new Problemas_Classicos();
    private static boolean desenha = false;
    private static boolean limpar = false;
    private static boolean addPonto = false;
    public static int pontoAux = 0;
    double mouseX, mouseY;

    public Interface_Ponto_In_Poligono() {
        initComponents();
        state = 0;
        lista_Ponto = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btn_Verifica = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel() {
            @Override
            public void paintComponent(Graphics g) {

                if (limpar) {
                    g.clearRect(0, 0, this.getWidth(), this.getHeight());
                    g.setColor(Color.RED);
                    limpar = false;
                    addPonto = false;
                    return;
                }

                if (pontoAux == 0) {
                    if (!addPonto) {
                        g.clearRect(0, 0, this.getWidth(), this.getHeight());
                        g.setColor(Color.RED);
                        if (desenha) {

                            if (state == 0) {
                                g.fillOval((int) lista_Ponto.get(state).x - 3, (int) lista_Ponto.get(state).y - 3, 7, 7);
                                g.drawLine((int) lista_Ponto.get(state).x, (int) lista_Ponto.get(state).y, (int) mouseX,
                                    (int) mouseY);
                            } else {
                                for (int i = 0; i < lista_Ponto.size() - 1; i++) {
                                    g.fillOval((int) lista_Ponto.get(i).x - 3, (int) lista_Ponto.get(i).y - 3, 7, 7);
                                    g.drawLine((int) (int) lista_Ponto.get(i).x, (int) lista_Ponto.get(i).y,
                                        (int) lista_Ponto.get(i + 1).x, (int) lista_Ponto.get(i + 1).y);
                                }
                                g.fillOval((int) lista_Ponto.get(lista_Ponto.size() - 1).x - 3,
                                    (int) lista_Ponto.get(lista_Ponto.size() - 1).y - 3, 7, 7);
                                g.drawLine((int) lista_Ponto.get(lista_Ponto.size() - 1).x,
                                    (int) lista_Ponto.get(lista_Ponto.size() - 1).y, (int) lista_Ponto.get(0).x,
                                    (int) lista_Ponto.get(0).y);

                            }

                        }
                    } else {
                        if (p != null) {
                            g.setColor(Color.BLACK);
                            g.fillOval((int) p.x - 3, (int) p.y - 3, 7, 7);
                            Btn_Verifica.setEnabled(true);
                            pontoAux = 1;
                        }
                    }

                }

            }
        };
        Btn_Add = new javax.swing.JButton();
        Btn_Limpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Geometria Computacional - Ponto Dentro de um Poligono");

        Btn_Verifica.setText("Verificar");
        Btn_Verifica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Btn_VerificaMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );

        Btn_Add.setText("Inserir Ponto");
        Btn_Add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Btn_AddMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Btn_AddMouseEntered(evt);
            }
        });

        Btn_Limpar.setText("Limpar");
        Btn_Limpar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Btn_LimparMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 422, Short.MAX_VALUE)
                        .addComponent(Btn_Limpar)
                        .addGap(18, 18, 18)
                        .addComponent(Btn_Add)
                        .addGap(18, 18, 18)
                        .addComponent(Btn_Verifica))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Btn_Verifica)
                    .addComponent(Btn_Add)
                    .addComponent(Btn_Limpar))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void Btn_AddMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Btn_AddMouseEntered
        // TODO add your handling code here:
        Btn_Add.setToolTipText("Este Botão Adiciona um ponto para realizar a verificação de tal ponto.");
    }//GEN-LAST:event_Btn_AddMouseEntered

    private void Btn_LimparMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Btn_LimparMouseClicked
        // TODO add your handling code here:
        desenha = false;
        Btn_Verifica.setEnabled(false);
        limpar = true;
        Btn_Add.setEnabled(false);
        state = 0;
        p = null;
        lista_Ponto.clear();
        pontoAux = 0;
        jPanel1.repaint();
    }//GEN-LAST:event_Btn_LimparMouseClicked

    private void Btn_AddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Btn_AddMouseClicked
        // TODO add your handling code here:
        addPonto = true;
    }//GEN-LAST:event_Btn_AddMouseClicked

    private void Btn_VerificaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Btn_VerificaMouseClicked
        // TODO add your handling code here:
        Poligono poligono = new Poligono();
        for (Ponto ponto : lista_Ponto) {
            poligono.insereVertice(ponto);
        }
        boolean resultado = classicos.pontoDentroPoligono(poligono, p);

        String texto = "Lista de Pontos: \n";

        for (Ponto ponto : lista_Ponto) {
            texto += "Ponto: (" + ponto.x + "," + ponto.y + ")\n";
        }

        texto += "\n\nPonto Verificado: (" + p.x + "," + p.y + ")";

        if(resultado){
            texto += "\n\nEsta Dentro? Verdade" ;
        }else{
            texto += "\n\nEsta Dentro? Falso" ;
        }
        JOptionPane.showMessageDialog(null, texto);
    }//GEN-LAST:event_Btn_VerificaMouseClicked

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        if ((!addPonto) || (limpar)) {
            mouseX = evt.getX();
            mouseY = evt.getY();
            jPanel1.repaint();
        }
    }//GEN-LAST:event_jPanel1MouseMoved

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        if (!addPonto) {
            Ponto aux = new Ponto(evt.getX(), evt.getY());
            if (lista_Ponto.isEmpty()) {
                lista_Ponto.add(aux);
                desenha = true;
            } else {
                lista_Ponto.add(aux);
                state++;
            }
            if (state >= 2) {
                Btn_Add.setEnabled(true);
            }
            jPanel1.repaint();
        } else {
            p = new Ponto(evt.getX(), evt.getY());
            jPanel1.repaint();
        }
    }//GEN-LAST:event_jPanel1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface_Ponto_In_Poligono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface_Ponto_In_Poligono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface_Ponto_In_Poligono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface_Ponto_In_Poligono.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface_Ponto_In_Poligono().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Add;
    private javax.swing.JButton Btn_Limpar;
    private javax.swing.JButton Btn_Verifica;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
